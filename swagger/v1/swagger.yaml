---
openapi: 3.0.1
info:
  title: 'Note App by: Two in the Front, One in the Rear'
  subtitle: Note App
  version: v1
paths:
  "/api/v1/child_categories/create":
    post:
      summary: create child_category
      description: Create a new child category
      tags:
      - CHILD CATEGORY
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                parent_categories_id:
                  type: number
  "/api/v1/child_categories/show":
    get:
      summary: show child_category
      description: Get a single child category
      tags:
      - CHILD CATEGORY
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the child category
      responses:
        '200':
          description: successful
  "/api/v1/child_categories/destroy":
    delete:
      summary: delete child_category
      description: Get a single child category
      tags:
      - CHILD CATEGORY
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the child category
      responses:
        '200':
          description: successful
  "/api/v1/child_categories/index":
    put:
      summary: list child_categories
      description: Show All
      tags:
      - CHILD CATEGORY
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/child_categories/update":
    put:
      summary: update child_category
      description: Create a new child category
      tags:
      - CHILD CATEGORY
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                title:
                  type: string
  "/api/v1/images/create":
    post:
      summary: create image
      description: Create a new image
      tags:
      - IMAGES
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image_path:
                  type: string
                link_name:
                  type: string
                notes_id:
                  type: number
  "/api/v1/images/show":
    get:
      summary: show image
      description: Get a single image
      tags:
      - IMAGES
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the image
      responses:
        '200':
          description: successful
  "/api/v1/images/destroy":
    delete:
      summary: delete image
      description: Delete a image
      tags:
      - IMAGES
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the image
      responses:
        '200':
          description: successful
  "/api/v1/images/index":
    get:
      summary: list images
      description: Get all images
      tags:
      - IMAGES
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/images/update":
    put:
      summary: update image
      description: Update a iamge
      tags:
      - IMAGES
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                image_path:
                  type: string
                link_name:
                  type: string
  "/api/v1/links/create":
    post:
      summary: create link
      description: Create a link
      tags:
      - LINKS
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                link_name:
                  type: string
                notes_id:
                  type: number
  "/api/v1/links/show":
    get:
      summary: show link
      description: Get a single note
      tags:
      - LINKS
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the link
      responses:
        '200':
          description: successful
  "/api/v1/links/destroy":
    delete:
      summary: delete link
      description: Delete a single link
      tags:
      - LINKS
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the link
      responses:
        '200':
          description: successful
  "/api/v1/links/index":
    get:
      summary: list links
      description: Get all links
      tags:
      - LINKS
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/links/update":
    put:
      summary: update link
      description: Update a single link
      tags:
      - LINKS
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                link:
                  type: string
                link_name:
                  type: string
  "/api/v1/notes/create":
    post:
      summary: create note
      description: Create a new note
      tags:
      - NOTES
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                user_id:
                  type: number
                child_category_id:
                  type: number
  "/api/v1/notes/show":
    get:
      summary: show single note
      description: Get a single note
      tags:
      - NOTES
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the note
      responses:
        '200':
          description: successful
  "/api/v1/notes/destroy":
    delete:
      summary: delete single note
      description: Delete a single note
      tags:
      - NOTES
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the note
      responses:
        '200':
          description: successful
  "/api/v1/notes/index":
    get:
      summary: show all notes
      description: Get all notes
      tags:
      - NOTES
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/notes/update":
    put:
      summary: update single note
      description: Update a single note
      tags:
      - NOTES
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                title:
                  type: string
                description:
                  type: string
  "/api/v1/parent_categories/create":
    post:
      summary: create parent_category
      description: Create a new parent category
      tags:
      - PARENT CATEGORY
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                user_id:
                  type: number
  "/api/v1/parent_categories/show":
    get:
      summary: show parent_category
      description: Get a single parent category
      tags:
      - PARENT CATEGORY
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the parent category
      responses:
        '200':
          description: successful
  "/api/v1/parent_categories/destroy":
    delete:
      summary: delete parent_category
      description: Delete a single parent category
      tags:
      - PARENT CATEGORY
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the parent category
      responses:
        '200':
          description: successful
  "/api/v1/parent_categories/index":
    put:
      summary: list parent_categories
      description: Show All
      tags:
      - PARENT CATEGORY
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/api/v1/parent_categories/update":
    put:
      summary: update parent_category
      description: Update a new parent category
      tags:
      - PARENT CATEGORY
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                title:
                  type: string
  "/api/v1/users/login":
    post:
      summary: login user
      description: Login a user
      tags:
      - USERS
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  "/api/v1/users/create":
    post:
      summary: create user
      description: Create a user
      tags:
      - USERS
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  "/api/v1/users/me":
    get:
      summary: me user
      description: Get User
      tags:
      - USERS
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          description: ID of the user
      responses:
        '200':
          description: successful
  "/api/v1/users/logout":
    delete:
      summary: logout user
      description: logout user
      tags:
      - USERS
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          email:
            type: string
          password:
            type: string
      responses:
        '200':
          description: successful
consumes:
- application/json
produces:
- application/json
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearer_format: string
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
